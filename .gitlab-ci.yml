# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
stages:          # List of stages for jobs, and their order of execution
  - build
  - test

build-job:       # This job runs in the build stage, which runs first.
  image: jafranc/smarten-u22
  stage: build
  before_script:
    - apt update -y
    - apt install uncrustify
    - cd src/ && uncrustify -c ../uncrustify.cfg --no-backup --replace *.cpp
    - cd ../include && uncrustify -c ../uncrustify.cfg --no-backup --replace *.h
  script:
    - cd ..
    - git submodule update --init
    - apt -y install libceres-dev libboost-all-dev
    - cd tpl/cgal
    - git apply ../../cgal.patch
    - mkdir -p ../../build
    - cd ../../build
    - cmake -G Ninja ..
    - ninja -j 4
    - ninja -j 4 Test_CGAL Test_Cimg
  artifacts:
    paths:
      - build

pages:
  image: sphinxdoc/sphinx
  stage: build
  script:
    - mkdir .public
    - pip3 install -q pandas numpy matplotlib datetime dateutils
    - cd sphinx && make html && cd ..
    - cp -r sphinx/build/html/* .public
    - mv .public public
  artifacts:
      paths:
        - public
#  only:
#    - main

unit-test-job:   # This job runs in the test stage.
  image: jafranc/smarten-u22
  stage: test    # It only starts when the job in the build stage completes successfully.
  dependencies:
    - build-job
  before_script:
    - apt update && apt install -y cmake libtiff5-dev libboost-filesystem-dev
  script:
    - mkdir -p /opt/output
    - cd unit_test/
    - ../build/Test_Cimg --gtest_filter=* --gtest_color=no
    - ../build/Test_CGAL --gtest_filter=* --gtest_color=no